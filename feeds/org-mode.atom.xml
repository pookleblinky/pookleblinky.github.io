<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">Mistake Not: Posts tagged 'org-mode'</title>
 <link rel="self" href="http://pookleblinky.github.io/feeds/org-mode.atom.xml" />
 <link href="http://pookleblinky.github.io/tags/org-mode.html" />
 <id>urn:http-pookleblinky-github-io:-tags-org-mode-html</id>
 <updated>2017-06-16T10:35:00Z</updated>
 <entry>
  <title type="text">workout.org</title>
  <link rel="alternate" href="http://pookleblinky.github.io/2017/06/workout-org.html?utm_source=org-mode&amp;utm_medium=Atom" />
  <id>urn:http-pookleblinky-github-io:-2017-06-workout-org-html</id>
  <published>2017-06-16T10:35:00Z</published>
  <updated>2017-06-16T10:35:00Z</updated>
  <author>
   <name>Pookleblinky</name></author>
  <content type="html">
&lt;p&gt;I believe that org-mode will drive you mad if you try to use more than the bare minimum of features necessary for what you need to do.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s how I&amp;rsquo;m using it to track workouts.&lt;/p&gt;

&lt;p&gt;I have a workout.org file, which is in &lt;code&gt;org-agenda-list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Workout.org has a local status header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#+TODO TODO STARTED | DONE&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The STARTED status is just handy to have, even if I don&amp;rsquo;t use it much.&lt;/p&gt;

&lt;p&gt;workout.org contains the following structure:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Datetree
Schedule
Regimen
Stats&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have the template&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;("w" "Log Workout" entry (file+datetree+prompt
     "~/org/workout.org") "* %? %U" :empty-lines 1)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;in my org.el which lets me create a new entry in the datetree. This entry is only to log details of the workout: weights, level of perceived effort, etc. The workout tasks are outside the datetree, in the schedule node. The schedule node contains subheaders of repeating scheduled todos:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;** TODO Daily: 300 KB swings
DEADLINE: &amp;lt;2017-06-15 Thu +1d&amp;gt;
** TODO Monday: Squat/row
DEADLINE: &amp;lt;2017-06-19 Mon +1w&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;etc. I can clock in, mark done to clock out, and then log the details in the datetree. Keeping the todo separate from the details seems like a good idea, as I don&amp;rsquo;t have to go hunting around: every workout todo is in a single spot. Each workout task has a link to a description in the regimen node: giant set blah, use these accessory movements blah, etc.&lt;/p&gt;

&lt;p&gt;Note that these tasks are deadlines, not scheduled. org-mode considers a scheduled task to be when the task is to be started. A deadline task will appear as DEADLINE on the designated day, and org-agenda will show the number of days til a deadline.&lt;/p&gt;

&lt;p&gt;The regimen node just contains such as giant set templates, notes on progressive increments, etc. Eventually I may use org-babel to add a such as a 531 calculator and template generator.&lt;/p&gt;

&lt;p&gt;Stats contains my bodyweight, BF%, not in a datetree but just time stamped.&lt;/p&gt;

&lt;p&gt;This is the simplest setup that does what I want. I could get fancier: adding tags, tweaking a report function that&amp;rsquo;ll show a plot of weights used for a specific lift over time, setting org-habit properties, writing a function to slurp the data right out of my phone&amp;rsquo;s FitNotes .csv into the appropriate places, etc.&lt;/p&gt;

&lt;p&gt;None of that&amp;rsquo;s really necessary. FitNotes tracks and graphs specific movements and muscle groups and weights much more nicely than I would do myself. Org-habit, while useful for some things, doesn&amp;rsquo;t really make sense in this context. And directly integrating FitNotes data seems redundant. What workout.org does allow that fitnotes doesn&amp;rsquo;t, is the ability to track and schedule things in plaintext, portably.&lt;/p&gt;

&lt;p&gt;The one justifiable increase in complexity is the abovementioned desire to incorporate a workout calculator and generator directly into the file via org-babel. For instance, being able to generate a datetree pre-filled with 531 workouts for a specified number of mesocycles. However, I&amp;rsquo;m not doing 531 although I am inspired by it. If I do switch over, I&amp;rsquo;ll probably get around to it.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s workout.org. It uses barely any of org-mode&amp;rsquo;s features, does what I need it to do, and can be endlessly refined into one of those org setups where the user seems to be attempting to use every feature of org-mode to weave an elaborate robot web around their lives.&lt;/p&gt;

&lt;p&gt;The prime rule in emacs is to start from scratch. The absolute worst thing you can do is plop someone else&amp;rsquo;s stuff into your setup and expect it to work for you. In org-mode especially, this is vital. Every one of those absurdly-polished gems of org mode configurations you see, where the blogger seems to have automated themselves away, is the result of years of tweaks and personal itch-scratches built up over time in the way that only lisp allows. Few will want to show you how they did things the lazy way, only the final result guaranteed to utterly annoy anyone who plops it into their config and tries to use it. In org mode especially, that lazy way that doesn&amp;rsquo;t show off any of the really nifty features is probably good enough for 80% of the time, and can easily be used as a guide by a newbie. If they&amp;rsquo;re foolish enough to steal it for themselves, at least it&amp;rsquo;ll be simple enough they will be able to understand it and find out how to tweak it. Either way, it&amp;rsquo;s much more useful than showing the fully chromed-out inscrutable code that the config inevitably becomes as emacs is tweaked into conforming to them.&lt;/p&gt;</content></entry></feed>